// <auto-generated />
using System;
using CreatureTeacher.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CreatureTeacher.Migrations
{
    [DbContext(typeof(CreatureTeacherContext))]
    partial class CreatureTeacherContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CreatureTeacher.Models.Creature", b =>
                {
                    b.Property<int>("CreatureId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("EyeId");

                    b.Property<int>("HeadId");

                    b.Property<int>("MouthId");

                    b.Property<string>("Name");

                    b.Property<int>("Parent1Id");

                    b.Property<int>("Parent2Id");

                    b.Property<int>("TailId");

                    b.HasKey("CreatureId");

                    b.HasIndex("EyeId");

                    b.HasIndex("HeadId");

                    b.HasIndex("MouthId");

                    b.HasIndex("TailId");

                    b.ToTable("Creatures");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Eye", b =>
                {
                    b.Property<int>("EyeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codon");

                    b.Property<string>("Dominance");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("EyeId");

                    b.ToTable("Eyes");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Head", b =>
                {
                    b.Property<int>("HeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codon");

                    b.Property<string>("Dominance");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("HeadId");

                    b.ToTable("Heads");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Mouth", b =>
                {
                    b.Property<int>("MouthId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codon");

                    b.Property<string>("Dominance");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("MouthId");

                    b.ToTable("Mouths");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Tail", b =>
                {
                    b.Property<int>("TailId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Codon");

                    b.Property<string>("Dominance");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("TailId");

                    b.ToTable("Tails");
                });

            modelBuilder.Entity("CreatureTeacher.Models.Creature", b =>
                {
                    b.HasOne("CreatureTeacher.Models.Eye", "Eye")
                        .WithMany("Creatures")
                        .HasForeignKey("EyeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreatureTeacher.Models.Head", "Head")
                        .WithMany("Creatures")
                        .HasForeignKey("HeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreatureTeacher.Models.Mouth", "Mouth")
                        .WithMany("Creatures")
                        .HasForeignKey("MouthId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CreatureTeacher.Models.Tail", "Tail")
                        .WithMany("Creatures")
                        .HasForeignKey("TailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
